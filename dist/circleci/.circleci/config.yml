# CircleCI integration with Drupal.

# Reusable steps.

## Copies .circle/Robofile to the repository root.
copy_robo: &copy_robo
  run:
    name: Copy RoboFile.php
    command: cp .circleci/RoboFile.php .

## Defines images and working directory.
defaults: &defaults
  docker:
    - image: juampynr/drupal8ci:latest
      environment:
        XDEBUG_MODE: coverage
    - image: mariadb:10.3
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
  working_directory: /opt/drupal

#Jobs

## Job to run Unit and Kernel tests.
unit_kernel_tests: &unit_kernel_tests
  <<: *defaults
  steps:
    - checkout
    - *copy_robo
    - run:
        name: Run PHPUnit tests
        command: robo job:run-unit-tests
    - store_test_results:
        path: /opt/drupal/artifacts/phpunit
    - store_artifacts:
        path: /opt/drupal/artifacts

## Job to run the update path and Behat tests.
behat_tests: &behat_tests
  <<: *defaults
  steps:
    - checkout
    - *copy_robo
    - run:
        name: Run Behat tests
        command: robo job:run-behat-tests
    - store_test_results:
        path: /opt/drupal/artifacts/behat
    - store_artifacts:
        path: /opt/drupal/artifacts

## Job to run the update path and Cypress tests.
# juampynr/drupal9ci:latest lands with PHP8 and node, so if your project is PHP8 you can remove the `Set up node` step.
cypress_tests: &cypress_tests
  <<: *defaults
  steps:
    - checkout
    - *copy_robo
    - run:
        name: Setup node
        command: |
          curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
          apt install -y nodejs xvfb libgtk-3-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
    - run:
        name: Run Cypress tests
        command: robo job:run-cypress-tests
    - store_test_results:
        path: /opt/drupal/artifacts/cypress
    - store_artifacts:
        path: /opt/drupal/artifacts

## Job to check coding standards.
code_sniffer: &code_sniffer
  <<: *defaults
  steps:
    - checkout
    - *copy_robo
    - run:
        name: Inspect coding standards
        command: robo job:check-coding-standards
    - store_test_results:
        path: /opt/drupal/artifacts/phpcs
    - store_artifacts:
        path: /opt/drupal/artifacts

## Job to check test coverage.
code_coverage: &code_coverage
  <<: *defaults
  steps:
    - checkout
    - *copy_robo
    - run:
        name: Generate code coverage report
        command: robo job:generate-coverage-report
    - store_artifacts:
        path: /opt/drupal/artifacts

# Declare all of the jobs we should run.
version: 2
jobs:
  run-unit-kernel-tests:
     <<: *unit_kernel_tests
  run-behat-tests:
     <<: *behat_tests
  run-code-sniffer:
     <<: *code_sniffer
  run-code-coverage:
     <<: *code_coverage
  run-cypress-tests:
     <<: *cypress_tests

# Declare a workflow that runs all of our jobs in parallel.
workflows:
  version: 2
  test_and_lint:
    jobs:
      - run-unit-kernel-tests
      - run-behat-tests
      - run-code-sniffer
      - run-code-coverage
      - run-cypress-tests
